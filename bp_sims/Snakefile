from hashlib import blake2b
import numpy as np

s_vals = [1e-1,1e-2]#,1e-3]
mu_vals = [1e-9]
dens_vals = [1]
L_vals = [10000]
sigma_vals = [10]
time_limit = [1e6]
replicates = np.arange(10)
samp_rate = [0.1]
samp_type_unif = ["uniform"]
samp_type_gaus = ["gaussian_w10","gaussian_w100","gaussian_w1000"]
sampling_schemes = ["wrapped_norm"]
n_sides = [10]
out_dir = ["20240513"]

def wildcards2seed(wildcards) -> int:
    wildcard_str = str(dict(wildcards))
    h = blake2b(wildcard_str.encode(),digest_size=4)
    return int.from_bytes(h.digest(),"big")

rule all:
    input:
        expand("results/{out_dir}/s{s_vals}_mu{mu_vals}_rho{dens_vals}_L{L_vals}_sigma{sigma_vals}_time{time_limit}_r{samp_rate}_burnin_{samp_type}_rep{rep}.json",
               s_vals=s_vals,mu_vals=mu_vals,dens_vals=dens_vals,L_vals=L_vals,sigma_vals=sigma_vals,time_limit=time_limit,
               samp_rate=samp_rate,samp_type=samp_type_unif,rep=replicates,out_dir = out_dir),
        expand("results/{out_dir}/s{s_vals}_mu{mu_vals}_rho{dens_vals}_L{L_vals}_sigma{sigma_vals}_time{time_limit}_r{samp_rate}_burnin_{sampling_scheme}_{samp_type}_nside{n_side}_rep{rep}.json",
               s_vals=s_vals,mu_vals=mu_vals,dens_vals=dens_vals,L_vals=L_vals,sigma_vals=sigma_vals,time_limit=time_limit,
               samp_rate=samp_rate,samp_type=samp_type_gaus,sampling_scheme=sampling_schemes,n_side=n_sides,rep=replicates, out_dir = out_dir)

rule run_sims_uniform:
    input:
    output:
        json="results/{out_dir}/s{s}_mu{mu}_rho{dens}_L{L}_sigma{sigma}_time{time}_r{r}_burnin_uniform_rep{rep}.json",
    params:
        seed=wildcards2seed
    shell:
        """
        mkdir -p results/uniform/s{wildcards.s}_mu{wildcards.mu}
        start_time=$(date +%s)
        ~/.conda/envs/snakemake310/bin/python source/simulations.py -s {wildcards.s} --mu {wildcards.mu} --dens {wildcards.dens} -r {wildcards.r} \
            --sigma {wildcards.sigma} --time_limit {wildcards.time} -L {wildcards.L} \
            --seed {params.seed} --json_out {output.json}
        end_time=$(date +%s)
        echo "Execution time for output file {output.json}: $((end_time - start_time)) seconds" >> log_times_20240513.txt
        """

rule run_sims_gaussian:
    input:
    output:
        json="results/{out_dir}/s{s}_mu{mu}_rho{dens}_L{L}_sigma{sigma}_time{time}_r{r}_burnin_{sampling_scheme}_gaussian_w{w}_nside{n_side}_rep{rep}.json",
    params:
       	seed=wildcards2seed
    shell:
        """
        mkdir -p results/gaussian_w{wildcards.w}/s{wildcards.s}_mu{wildcards.mu}
        start_time=$(date +%s)
        ~/.conda/envs/snakemake310/bin/python source/simulations.py -s {wildcards.s} --mu {wildcards.mu} --dens {wildcards.dens} -r {wildcards.r} \
            --sigma {wildcards.sigma} --time_limit {wildcards.time} -L {wildcards.L} --n_side {wildcards.n_side} \
            --seed {params.seed} --sampling_scheme {wildcards.sampling_scheme} -w {wildcards.w} --json_out {output.json}
        end_time=$(date +%s)
        echo "Execution time for output file {output.json}: $((end_time - start_time)) seconds" >> log_times_20240513.txt
        """
